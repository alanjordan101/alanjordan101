{
    "collab_server" : "",
    "contents" : "# Define Functions\nCountBox1<-function(varr) {\n  counts <- table(varr)  \n  percc1 <- counts[1]/sum(counts)\n  percc2 <- counts[2]/sum(counts)\n  percc2a <-paste(formatC(percc2*100,format=\"f\",digits=1),\"%\",sep=\"\")\n  percc1a <-paste(formatC(percc1*100,format=\"f\",digits=1),\"%\",sep=\"\")\n  box<-data.frame(t(rbind(format(counts[2],big.mark=\",\"),percc2a, format(counts[1], big.mark=\",\"), percc1a)))\n  colnames(box)<-c(  \"Male \\nCounts\", \"Male \\nPercent\", \"Female \\nCounts\", \"Female \\nPercent\")\n  rownames(box)<-NULL\n  out<-list(box, counts)\t\n  return(out)\n}\n\n\n\n\nCountBox2<-function(varr,vn,adult=1) {\n  if (adult==1) {\tcounts <- table(set$sex,varr) } else {\tcounts <- table(adol$sex,varr) }\n  labs<-colnames(counts)\n  if(sum(counts[1,],na.rm=TRUE)==0){percc1 <- counts[1,]} else {percc1 <- counts[1,]/sum(counts[1,])}\n  if(sum(counts[2,],na.rm=TRUE)==0){percc2 <- counts[2,]} else {percc2 <- counts[2,]/sum(counts[2,])}\n  percc2a <-paste(formatC(percc2*100,format=\"f\", digits=1),\"%\",sep=\"\")\n  percc1a <-paste(formatC(percc1*100,format=\"f\", digits=1),\"%\",sep=\"\")\n  counts2<-format(counts, big.mark=\",\")\n  box<-data.frame(t(rbind(labs,counts2[2,],percc2a, counts2[1,], percc1a)))\n  colnames(box)<-c( vn, \"Male \\nCounts\", \"Male \\nPercent\", \"Female \\nCounts\", \"Female \\nPercent\")\n  rownames(box)<-NULL\n  out<-list(box, counts, counts2)\t\n  return(out)\n}\n\n\n\n\nPercBox1<-function(vars, labs, data=set) {\n  msum<-apply(subset(data,sex2==1)[,vars],2,FUN=sum, na.rm=TRUE)\n  if(sum(msum)==0) {mmean=msum} else {  mmean<-apply(subset(data,sex2==1)[,vars],2,FUN=mean, na.rm=TRUE)}\n  fsum<-apply(subset(data,sex2==2)[,vars],2,FUN=sum, na.rm=TRUE)\n  if(sum(fsum)==0) {fmean=fsum} else {  fmean<-apply(subset(data,sex2==2)[,vars],2,FUN=mean, na.rm=TRUE)}\n  bt<-cbind(mmean,fmean)*100\n  msum<-formatC(msum, format='f', digits=0, big.mark=\",\")\n  fsum<-formatC(fsum, format='f', digits=0, big.mark=\",\")\n  \n  bt1<-paste(round(mmean*100,1),\"%\", sep=\"\")\n  bt2<-paste(round(fmean*100,1),\"%\", sep=\"\")\n  bt3<-cbind(bt1,bt2)\n  box<-cbind(labs,format(msum,big.mark=\",\"),bt1,format(fsum,big.mark=\",\"),bt2)\n  colnames(box)<-c( \"Behavior\", \"Male Counts\", \"Male Percent\", \"Female Counts\", \"Female Percent\")\n  rownames(box)<-NULL\n  \n  if ( table(data$sex)[1]==0 & table(data$sex)[2] >0 ) { \n    box<- box[,c(1,2,3)]\n    bt3<- bt3[,1]\n    bt<- bt[,1]\n  }\n  \n  if ( table(data$sex)[1]>0 & table(data$sex)[2] ==0 ) {  \n    box<- box[,c(1,4,5)]\n    bt3<- bt3[,2]\n    bt<- bt[,2]\n  }\n  \n  out<-list(box, bt,bt3)\t\n  return(out)\n}\n\n\nMeanBox1<-function(vars, labs, data=setcsa) {\n  msum<-apply(subset(data,sex2==1)[,vars],2,FUN=sum, na.rm=TRUE)\n  fsum<-apply(subset(data,sex2==2)[,vars],2,FUN=sum, na.rm=TRUE)\n  if(sum(msum)==0) {mmean=msum} else {  mmean<-apply(subset(data,sex2==1)[,vars],2,FUN=mean, na.rm=TRUE)}\n  if(sum(fsum)==0) {fmean=fsum} else {  fmean<-apply(subset(data,sex2==2)[,vars],2,FUN=mean, na.rm=TRUE)}\n  \n  if(sum(msum)==0) {mmedian=msum} else {  mmedian<-apply(subset(data,sex2==1)[,vars],2,FUN=median, na.rm=TRUE)}\n  if(sum(fsum)==0) {fmedian=fsum} else {  fmedian<-apply(subset(data,sex2==2)[,vars],2,FUN=median, na.rm=TRUE)}\n  \n  b1<-cbind(mmean,fmean)\n  \n  mmean<-formatC(mmean,format=\"f\",digits=1)\n  mmedian<-formatC(mmedian,format=\"f\",digits=1)\n  fmean<-formatC(fmean,format=\"f\",digits=1)\n  fmedian<-formatC(fmedian,format=\"f\",digits=1)\n  \n  box<-cbind(labs,mmean,mmedian,fmean,fmedian)\n  rownames(box)<-NULL\n  colnames(box)<-c(\"Variable\",\"Male Mean\", \"Male Median\", \"Female Mean\", \"Female Median\")\n  \n  if ( table(data$sex)[1]==0 & table(data$sex)[2] >0 ) { \n    box<- box[,c(1,2,3)]\n    b1<- b1[,1]\n  }\n  \n  if ( table(data$sex)[1]>0 & table(data$sex)[2] ==0 ) {  \n    box<- box[,c(1,4,5)]\n    b1<- b1[,2]\n  }\n  \n  out<-list(box,b1)\n  return(out)\n}\n\n\n\nPercPlot<-function(data=out2,cex=1,cex.names=1 ) {\n  b=barplot(t(data[[2]]),beside=TRUE, legend =c(\"Male\", \"Female\"), names.arg=labs,\n            las=1,col=c(\"#007FFF\", \"Navyblue\"), ylim=c(0,max(data[[2]])*1.5 ), cex.names=cex.names , yaxt=\"n\")\n  my.axis <-paste(axTicks(2),\"%\")\n  axis(2,at=axTicks(2), labels=my.axis, las=1)\n  text(x=b,y=t(data[[2]]),labels=t(data[[3]]) ,pos=3,col=\"black\",cex=cex) \n}\n\n\n\n\nCountPlot<-function(data=out2, cex=1, cex.names=1  ) {\n  par(mfrow=c(2,1))\n  b<-barplot(data[[2]][2,], main=\"Male\",  names.arg=data[[1]][,1], cex.names=cex.names,  \n             col=\"Navyblue\", ylim=c(0,max(data[[2]][2,])*1.5 ), las=1)\n  text(x=b,y=data[[2]][2,],labels=data[[1]][,3] ,pos=3,col=\"black\",cex=cex) \n  b2<-barplot(data[[2]][1,], main=\"Female\",  names.arg=data[[1]][,1], cex.names=cex.names,  \n              col=\"#007FFF\", ylim=c(0,max(data[[2]][1,])*1.5 ), las=1)\n  text(x=b2,y=data[[2]][1,],labels=data[[1]][,5] ,pos=3,col=\"black\",cex=cex.names) \n}\n\n\nMeanPlot<-function(data=out2,cex=1,cex.names=1) {\n  b1<-out2[[2]]\n  b<-barplot(t(b1),beside=TRUE, horiz=FALSE, legend =c(\"Male\", \"Female\"), names.arg=labs,  \n             las=1,col=c(\"#007FFF\", \"Navyblue\"), ylim=c(0,max(b1)*1.5 ), \n             cex.names=cex.names,   xlab=\"Mean\" )\n  text(x=b,y=as.matrix(t(b1)),labels=t(formatC(b1,format=\"f\",digits=1)) ,col=\"black\",\n       cex=cex, pos=3) \n}\n\n\n\n# Stop Scientific Notation\noptions(\"scipen\" = 20)\n\n\nggpie <- function(df, plot_title, by = \"cat\",  totals = \"res\") {\n  \n  #  display categories from largest to smallest\n  #    original df not mutated - elements added to plot outside ggpie\n  #    will likely have a different order.\n  df <- arrange(df, desc(df[[totals]]))\n  \n  # get labels and where they go\n  labels <- paste0(df[[by]], \" \", round(df[[totals]] / sum(df[[totals]]) * 1000)/10,  \"%\")\n  at <- cumsum(df[[totals]]) - df[[totals]] / 2\n  \n  ggplot(df, aes_string(x = 1, y = totals, fill = by)) +\n    \n    # make stacked bar chart with black border\n    geom_bar(stat = 'identity', color = 'black') +\n    \n    # x-value moves percents closer/farther from center. 0.7-1.3 reasonable.\n    annotate(geom = \"text\", y = at, x = 1.65, label = labels, size = 5) +\n    \n    # convert to pie chart by using polar coordinates.\n    #   comment out for stacked bar chart.\n    coord_polar(theta = 'y', start=0) +\n    \n    # add a title. makes repeated code cleaner.\n    labs(title = plot_title) +\n    \n    # kill the legend and floating labels for axes. make text big.\n    theme_minimal()+\n    theme(legend.position = \"none\", \n          text = element_text(size = 22),\n          axis.ticks = element_blank(),\n          axis.text.y = element_blank(),\n          panel.border = element_blank(),\n          panel.grid=element_blank(),\n          axis.title = element_blank()\n    ) +\n    \n    # label the categories\n    scale_y_continuous(breaks = at, labels = NULL) +\n    \n    # Manual slice coloring...often a bad idea\n    scale_fill_manual(values=c(\"#007FFF\", \"Navyblue\")) +\n    \n    # remove black border from legend for when it's added back in\n    guides(fill = guide_legend(override.aes = list(color = NA)))\n  \n}\n\nsource(\"http://pcwww.liv.ac.uk/~william/R/crosstab.r\")\n\n#tabb<-function(data,varr, newvn, textsize=3) {\n#  df1<-tabular(  data[[varr]] ~  sex*(1+Percent(\"col\")),  data=set) \n#  df1<-as.matrix(df1)\n#  df1<-data.frame(df1[4:dim(df1)[1],])\n#  names(df1)<- c( newvn, \"Female Counts\", \"Female Percent\", \"Male Counts\", \"Male Percent\")\n#  df1[,2] <-as.numeric(as.character(df1[,2]))\n#  df1[,3] <-as.numeric(as.character(df1[,3]))\n#  df1[,4] <-as.numeric(as.character(df1[,4])) \n#  df1[,5] <-as.numeric(as.character(df1[,5])) \n#  df2<-df1\n#  df2[,2] <-formatC(df1[,2], format=\"d\", big.mark=',')\n#  df2[,4] <-formatC(df1[,4], format=\"d\", big.mark=',')\n#  df2[,3] <-sprintf(\"%1.1f%%\", df1[,3])\n#  df2[,5] <-sprintf(\"%1.1f%%\", df1[,5])\n#  df2<-df2[,c(1,4,5,2,3)]\n#  df3<-df1[,c(1,3,5)]\n#  names(df3)<- c( newvn,  \"Female\", \"Male\")\n#  df3<-melt(df3, id=newvn)\n#  g1<-ggplot(df3, aes_string(x = newvn, y = \"value\", fill=\"variable\")) +    geom_bar(stat = \"identity\", position=\"dodge\") +\n#    scale_fill_manual(values=c(\"lightslateblue\", \"Navyblue\"), name=\"Gender\") +  ylab(\"Percent\")  + theme_minimal() +  \n#    geom_text(aes(y=value, ymax=value, label=paste0(round(value,1),\"%\"  )), position= position_dodge(width=0.9), vjust=-.5, color=\"black\", size = textsize) +\n#    scale_y_continuous(\"Percent\",limits=c(0,max(df3$value)*1.1))\n#  dfs<-list(df1, df2, df3, g1)\n#  return(dfs)\n#}\n\n\n\ntabb<-function(data,varr, newvn, textsize=3) {\n  #  set$xx<-set$acat\n  #  newvn=\"Age\"\n  #  data<-set\n  \n  df1 <-data %>% group_by_(\"sex\",varr) %>% summarize(n=n())\n  colnames(df1)[2]<-'xx'\n  df1<- filter(df1, !is.na(xx))\n  \n  df2 <-data %>% group_by(sex) %>% summarize(ns=n())\n  df1<-merge(df1, df2, by='sex')\n  df1$perc <- df1$n/ df1$ns*100\n  df1$perclab<-sprintf(\"%1.1f%%\", round(df1$perc,1))\n  \n  df3<-dcast(df1, xx~sex, value.var=\"perc\")\n  colnames(df3)[2:ncol(df3)] <- paste0(colnames(df3)[2:ncol(df3)], \"_perc\")\n  \n  df4<-dcast(df1, xx~sex, value.var=\"n\")\n  colnames(df4)[2:ncol(df4)] <- paste0(colnames(df3)[2:ncol(df4)], \"_n\")\n  \n  df5<-merge(df4,df3, by=names(df3)[1], sort=F)\n  \n  if ( ncol(df5)==5 ) {  df5<-df5[c(1, 3, 5, 2, 4)] }\n  df5[,2] <- ifelse(is.na(df5[,2]), 0, df5[,2])\n  df5[,3] <- ifelse(is.na(df5[,3]), 0, df5[,3])\n  if ( ncol(df5)==5 ) {\n    df5[,4] <- ifelse(is.na(df5[,4]), 0, df5[,4])\n    df5[,5] <- ifelse(is.na(df5[,5]), 0, df5[,5]) \n  }\n  \n  \n  \n  df6<-df5\n  df6[,2]<-formatC(df6[,2], format=\"d\", big.mark=',')\n  df6[,3]<-sprintf(\"%1.1f%%\", df6[,3])\n  if ( ncol(df6)==5 ) {\n    df6[,4]<-formatC(df6[,4], format=\"d\", big.mark=',')\n    df6[,5]<-sprintf(\"%1.1f%%\", df6[,5])\n  }\n  \n  if ( table(data$sex)[1]==0 & table(data$sex)[2] >0 ) {names(df6)<- c( newvn, \"Male Counts\", \"Male Percent\")}\n  if ( table(data$sex)[1]>0 & table(data$sex)[2] ==0 ) {names(df6)<- c( newvn, \"Female Counts\", \"Female Percent\")}\n  if ( table(data$sex)[1]>0 & table(data$sex)[2] >0 )  {names(df6)<- c( newvn, \"Male Counts\", \"Male Percent\", \"Female Counts\", \"Female Percent\")}\n  \n  \n  g1<-ggplot(df1, aes(x = xx, y = perc, fill=sex)) +    geom_bar(stat = \"identity\", position=\"dodge\") +\n    scale_fill_manual(values=c(\"#007FFF\", \"Navyblue\"), name=\"Gender\") +  ylab(\"Percent\") +  xlab(newvn) + theme_minimal() +  \n    geom_text(aes(y=perc, ymax=perc, label=perclab), position= position_dodge(width=0.9), vjust=-.5, color=\"black\", size = textsize) +\n    scale_y_continuous(\"Percent\",limits=c(0,max(df1$perc)*1.1))\n  \n  colnames(df1)[2] <- newvn\n  \n  dfs<-list(df1, df6, g1)\n  return(dfs)\n}",
    "created" : 1461954314375.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3506433864",
    "id" : "20DB0859",
    "lastKnownWriteTime" : 1464878320,
    "last_content_update" : 0,
    "path" : "C:/Alans Repository/WebData2016/WebdataFunctions.R",
    "project_path" : "WebdataFunctions.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 3,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}